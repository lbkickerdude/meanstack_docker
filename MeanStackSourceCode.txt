Setup Express API Application
In the meanstack directory, create a directory with the command mkdir express

In the express directory, create a file named package.json with the following text…
{
  "name": "express",
  "version": "0.0.0",
  "private": true,
  "scripts": {
    "start": "node server.js"
  },
  "dependencies": {
    "body-parser": "~1.15.2",
    "express": "~4.14.0",
    "mongoose": "^4.7.0"
  }
}

In the express directory, create a file named server.js with the following text…
//Get dependencies
const express = require('express');
const path = require('path');
const http = require('http');
const bodyParser = require('body-parser');

//Get API routes
const api = require('./routes/api');

const app = express();

//Parsers for POST data
app.use(bodyParser.json());
app.use(bodyParser.urlencoded({ extended: false }));

// Cross Origin middleware
app.use(function(req, res, next) {
  res.header("Access-Control-Allow-Origin", "*")
  res.header("Access-Control-Allow-Headers", "Origin, X-Requested-With, Content-Type, Accept")
  next()
})

//Set our api routes
app.use('/', api);

//Get port from environment and store in Express
const port = process.env.PORT || '3000';
app.set('port', port);

//Create HTTP server
const server = http.createServer(app);

//Listen on provided port to network interfaces
server.listen(port, () => console.log(`API running on localhost:${port}`));

In the express directory, create a routes directory with an api.js file containing the following text…
//Import dependencies
const mongoose = require('mongoose');
const express = require('express');
const router = express.Router();

//MongoDB URL from the docker-compose file
const dbHost = "mongodb://localhost:27017/meanstack";

// Connect to mongodb
mongoose.connect(dbHost);

// create mongoose schema
const todoSchema = new mongoose.Schema({
  tag: String,
  task: String

},
{ timestamps: true });

// create mongoose model
const Todo = mongoose.model('Todo', todoSchema);

/_ GET api listing _/
router.get('/', (req, res) => {

    res.send('Todo APIs...');
});

/_ GET api listing _/
router.get('/health', (req, res) => {
    res.status(200).json({"Status": "Up"});
});

/_ GET all todo items _/
router.get('/todos', (req, res) => {
    Todo.find({}, (err, todos) => {
        if (err) res.status(500).send(error)
        res.status(200).json(todos);
    });
});

/_ GET items by id _/
router.get('/todos/id/:id', (req, res) => {
    console.log('_id=%s', req.params.id);
    Todo.find({'_id': req.params.id}, (err, todos) => {
    //Todo.findById(req.params.id, (err, todos) => {
        if (err) res.status(500).send(error)
        res.status(200).json(todos);
    });
});

/_ GET items by tag _/
router.get('/todos/tag/:tag', (req, res) => {
    console.log('Tag=%s', req.params.tag);
    Todo.find({'tag': req.params.tag}, (err, todos) => {
        if (err) res.status(500).send(error)
        res.status(200).json(todos);
    });
});

/_ Create a todo item _/
router.post('/todos', (req, res) => {
    let todo = new Todo({
        tag: req.body.tag,
        task: req.body.task


------------------------------------------------------------------------------


Setup Angular Application 
In the meanstack directory, create a directory with the command mkdir angular

Run the following command to setup an angular app and set up dependencies in the angular directory…
npx @angular/cli new angular

Update the angular/package.json file start script to 
ng serve --host 0.0.0.0

In the angular/src directory, delete the file named app_modules.ts

In the angular/src/app directory, delete the file named app.component.spec.ts

In the angular/src directory, update the index.html file to the following…
<!doctype html>
<html>
<head>
  <meta charset="utf-8">
  <title>Angular Client</title>
  <base href="/">

  <meta name="viewport" content="width=device-width, initial-scale=1">

  <!-- Bootstrap CDN -->
  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-alpha.2/css/bootstrap.min.css">

  <link rel="icon" type="image/x-icon" href="favicon.ico">
</head>
<body>
  <app-root>Loading...</app-root>
</body>
</html>

In the angular/src/app directory, update the app.component.html file to the following…
<nav class="navbar navbar-light bg-faded">
  <a class="navbar-brand" href="#">M.E.A.N. Stack</a>
</nav>

<div class="container">
  <div class="row">
    <div class="col">
      <h4>Add new todo item...</h4>
      <form>
        <div class="form-group">
          <label for="tag">Tag</label>
          <input type="text" class="form-control" id="tag" #tag>
        </div>
        <div class="form-group">
          <label for="task">Task</label>
          <input type="text" class="form-control" id="task" #task>
        </div>
        <button type="button" (click)="addTodo(tag.value, task.value)" class="btn btn-primary">Add todo</button>
      </form>
    </div>
  </div>
  <br>
  <br>
  <div class="row">
    <div class="col">
      <h4>Todos...</h4>
      <ul class="list-group" *ngFor="let todo of todos; let i = index">
        <li class="list-group-item">{{i+1}}. <b>{{todo.tag}}</b> | <i>{{todo.task}}</i></li>
     </ul>
    </div>
  </div>
</div>

In the angular/src/app directory, update the app.component.ts file to the following…
import { Component, OnInit } from '@angular/core';
import { HttpClient } from '@angular/common/http';

@Component({
  selector: 'app-root',
  templateUrl: './app.component.html',
  styleUrls: ['./app.component.css']
})
export class AppComponent implements OnInit {
  title = 'app works!';

  // Link to our api, pointing to localhost
  API = 'http://localhost:3000';

  // Declare empty list of todos
  todos: any[] = [];

  constructor(private http: HttpClient) {}

  // Angular 2 Life Cycle event when component has been initialized
  ngOnInit() {
    this.getAllTodos();
  }

  // Add one todo to the API
  addTodo(tag, task) {
    this.http.post(`${this.API}/todos`, {tag, task})
      .subscribe(() => {
        this.getAllTodos();
      })
  }

  // Get all todos from the API
  getAllTodos() {
    this.http.get(`${this.API}/todos`)
      .subscribe((todos: any) => {
        console.log(todos)
        this.todos = todos
      })
  }
}

In the angular/src/app directory, update the app.module.ts file to the following…
import { BrowserModule } from '@angular/platform-browser';
import { NgModule } from '@angular/core';
import { HttpClientModule } from '@angular/common/http'; // add http client module

import { AppComponent } from './app.component';

@NgModule({
  declarations: [
    AppComponent
  ],
  imports: [
    BrowserModule,
    HttpClientModule // import http client module
  ],
  providers: [],
  bootstrap: [AppComponent]
})
export class AppModule { }

Run the following commands to verify your API app…
npm install
npm start

The application will be running at http://localhost:4200/ displaying the MEAN Stack Todo app if it is working.  You would need the mongodb and express servers running locally for the entire app to work at this point.

